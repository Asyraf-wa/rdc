{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */

	public function initialize(): void
	{
		parent::initialize();

		$this->loadComponent('Search.Search', [
			'actions' => ['search'],
		]);
	}
	
    public function index()
    {
{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
        $this->paginate = [
            'contain' => [{{ Bake.stringifyList(belongsTo, {'indent': false})|raw }}],
        ];
{% endif %}
		
		$this->set('{{ pluralName }}', $this->paginate($this->{{ currentModelName }}->find('all')
				->where(['{{ currentModelName }}.status' => 1]) //1 = Active
				//->order(['{{ currentModelName }}.created' => 'desc']) 
		));	
		$this->set('count_find_result', $this->{{ currentModelName }}->find()->where(['status' => '1'])->count());
    }
	
    public function indexArchived()
    {
		$this->set('{{ pluralName }}', $this->paginate($this->{{ currentModelName }}->find('all')
				->where(['{{ currentModelName }}.status' => 2]) //2 = Archived
				//->order(['{{ currentModelName }}.created' => 'desc']) 
		));	
		$this->set('count_find_result', $this->{{ currentModelName }}->find()->where(['status' => '2'])->count());
    }
	
    public function indexDisposed()
    {
		$this->set('{{ pluralName }}', $this->paginate($this->{{ currentModelName }}->find('all')
				->where(['{{ currentModelName }}.status' => 3]) //3 = Disposed
				//->order(['{{ currentModelName }}.created' => 'desc']) 
		));	
		$this->set('count_find_result', $this->{{ currentModelName }}->find()->where(['status' => '3'])->count());
    }
